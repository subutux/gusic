# This file is part of google-music.

# google-music is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# google-music is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with google-music.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2012-2013, Stijn Van Campenhout <stijn.vancampenhout@gmail.com>

TODO:

v 0.1
-----
- read only mode
v 0.2
-----
- caching!
-- To clarify:
Caching would be done using a SqLite back-end. The library is first loaded in an sqlite database.
when this is done, the liststore will contain the database contents.

now here comes the hard part: Create a wrapper class for a ListStore and a sqlite database.
when i insert a row, insert it into the ListStore and SqLite database. When I update one, update
the ListStore and SqLite. When I remove a row, remove it from the ListStore and SqLite database.
UPDATE: the simplelest method will be creating a 'glue' class between the sql database and a liststore.
Adding and removing calls will be signalled to this class who removes the row/adds the row in the
liststore and sqlite table.


Sorting will be a bit harder. Since the default sorting function in ListStores are slow, the class
must be able to sort using the sqlite database, empties the ListStore and puts the sorted content
back into the liststore. Needs speed testing. UPDATE: scratch that. the default sorting works fine.
